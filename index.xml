<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LuuBluum's Coding Blog</title><link>https://LuuBluum.github.io/</link><description>Recent content on LuuBluum's Coding Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Aug 2022 12:32:47 -0700</lastBuildDate><atom:link href="https://LuuBluum.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Vulkan with Rust, Part 6: The Graphics Pipeline</title><link>https://LuuBluum.github.io/posts/post6rustvulkan/</link><pubDate>Sat, 13 Aug 2022 12:32:47 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post6rustvulkan/</guid><description>&lt;p>Now that we have &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Swap_chain">the swapchain&lt;/a> and &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Image_views">image views&lt;/a> set up, we can finally start work on something a bit more broadly relevant: the &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Graphics_pipeline_basics/Introduction">graphics pipeline&lt;/a>. All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>Learning Vulkan with Rust, Part 5: The Swap Chain and Image Views</title><link>https://LuuBluum.github.io/posts/post5rustvulkan/</link><pubDate>Sat, 06 Aug 2022 20:19:44 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post5rustvulkan/</guid><description>&lt;p>With a &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Window_surface">surface&lt;/a> provided, we can now move to one of the more daunting components of Vulkan: the &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Swap_chain">swap chain&lt;/a>. After that, we need to take care of &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Image_views">image views&lt;/a> so that the swap chain has something to actually swap in. This will probably be the most challenging bit so far. Probably. All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>Learning Vulkan with Rust, Part 4: Surfaces</title><link>https://LuuBluum.github.io/posts/post4rustvulkan/</link><pubDate>Sat, 06 Aug 2022 10:23:53 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post4rustvulkan/</guid><description>&lt;p>With the &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Physical_devices_and_queue_families">physical&lt;/a> and &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Logical_device_and_queues">logical&lt;/a> devices now configured, we can move on to actually creating a &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Presentation/Window_surface">Vulkan surface&lt;/a> to draw on. From there, we can actually start fiddling with layers relevant to graphics! All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>Learning Vulkan with Rust, Part 3: Adding Physical and Logical Devices</title><link>https://LuuBluum.github.io/posts/post3rustvulkan/</link><pubDate>Mon, 01 Aug 2022 15:54:34 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post3rustvulkan/</guid><description>&lt;p>With validation layers set up back in &lt;a href="https://luubluum.github.io/posts/post2rustvulkan/">part 2&lt;/a>, we can finally move on to adding &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Physical_devices_and_queue_families">physical&lt;/a> and &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Logical_device_and_queues">logical&lt;/a> devices! All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>Learning Vulkan with Rust, Part 2: Creating a Vulkan Instance with Validation Layers</title><link>https://LuuBluum.github.io/posts/post2rustvulkan/</link><pubDate>Sun, 31 Jul 2022 14:45:18 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post2rustvulkan/</guid><description>&lt;p>Having created the basic code structure for setting up a Vulkan project in Rust back in &lt;a href="https://luubluum.github.io/posts/post1rustvulkan/">part 1&lt;/a>, we can now actually deal with creating a &lt;a href="https://vulkan-tutorial.com/en/Drawing_a_triangle/Setup/Instance">Vulkan instance&lt;/a> and setting up &lt;a href="https://vulkan-tutorial.com/Drawing_a_triangle/Setup/Validation_layers">validation layers&lt;/a>. All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>Learning Vulkan with Rust, Part 1: Base Code</title><link>https://LuuBluum.github.io/posts/post1rustvulkan/</link><pubDate>Sat, 30 Jul 2022 21:05:46 -0700</pubDate><guid>https://LuuBluum.github.io/posts/post1rustvulkan/</guid><description>&lt;p>I&amp;rsquo;ve decided to go and work through and learn Vulkan in Rust. There will surely be no issues with this and everything will go smoothly without any errors. All of the code can be found at &lt;a href="https://github.com/LuuBluum/Learning-Vulkan-with-Rust">this repo&lt;/a>.&lt;/p></description></item><item><title>About</title><link>https://LuuBluum.github.io/about/</link><pubDate>Sat, 30 Jul 2022 17:27:23 -0700</pubDate><guid>https://LuuBluum.github.io/about/</guid><description>Brad Dragun (LuuBluum) is a full-time C++ developer who also has taken up learning Rust.</description></item></channel></rss>